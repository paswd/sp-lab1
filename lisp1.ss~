(define (smallest-div n)
 (find-div n 2))

(define (divides? a b)
  (= (remainder b a) 0))

(define (spasquare n)
  (* n n ))

(define (find-div n current)
  (cond ((> (spasquare current) n) n)
        ((divides? current n) current)
        (else (find-div n (+ current 1)))))

(define (prime? n)
  (cond ((< n 2) #f)
  (else (= n (smallest-div n)))))
  
(prime? 1)
(prime? 2)
(prime? 3)
(prime? 4)
(prime? 5)
(prime? 6)
(prime? 7)
(prime? 8)
(prime? 9)
(prime? 10)